#!/usr/bin/env python3
import sys
import math
import argparse
stack = []
def d2r(d):
    return d * math.pi / 180
def isop(arg):
    return arg == '+' or arg == '+' or \
    arg == 'x' or arg == "/" or arg == "^" or \
    arg == "sin" or arg == "cos" or arg == "tan"
def checkstack(n):
    if len(stack) < n:
        print('Stack underflow (need at least 2 items)')
        sys.exit(1)
parser = argparse.ArgumentParser(prog='rpn',
                                 description='An RPN commandline calculator',
                                 epilog='See also www.github.com/kelley/rpn')
#parser.add_argument('-h', '--help', action='store_true')
#parser.add_argument('-s', '--show-stack', action='store_true')
parser.add_argument('-d', '--digits', type=int, default=6, help='number of digits to show')
#parser.add_argument('-s', '--show_stack', default=False, help='show the stack during processing?')
parser.add_argument('-s', "--stack", action='store_true', help='show stack during processing')
options,args = parser.parse_known_args()
#print("options:")
#print(options)
#print("args:")
#print(args)
argc = len(args)
#print(f'stack={options.stack}')
#print('next is args:')
#print(args)
for i in range(argc):
    arg = args[i]
    slen = len(stack)
    if arg == "+":
        checkstack(2)
        stack[slen - 2] = float(stack[slen-2]) + float(stack[slen-1])
        stack.pop()
    elif arg == "-":
        stack[slen - 2] = float(stack[slen-2]) - float(stack[slen-1])
        stack.pop()
    elif arg == "x":
        stack[slen - 2] = float(stack[slen-2]) * float(stack[slen-1])
        stack.pop()
    elif arg == "/":
        stack[slen - 2] = float(stack[slen-2]) / float(stack[slen-1])
        stack.pop()
    elif arg == "^":
        stack[slen - 2] = pow(float(stack[slen-2]), float(stack[slen-1]))
        stack.pop()
    elif arg == "sin":
        stack[slen - 1] = math.sin(d2r(float(stack[slen-1])))
    elif arg == "cos":
        stack[slen - 1] = math.cos(d2r(float(stack[slen-1])))
    elif arg == "tan":
        stack[slen - 1] = math.tan(d2r(float(stack[slen-1])))
    elif arg == "pi":
        stack.append(math.pi)
    else:
        stack.append(float(arg))
    if options.stack:
        print("%6s" % arg, stack)
if len(stack) > 1:
    print("Stack: ", stack)
else:
    print(float(stack[0]))
